name: Build and Sign Android APK with Updated index.html
on:
  push:
    paths:
      - "index.html"
      - "assets/**"
      - "css/**"
      - "js/**"
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Dependencies (Node.js, Cordova, Android SDK)
        run: |
          sudo apt-get update
          sudo apt-get install -y android-sdk zipalign
          npm install -g cordova

      - name: Check if `MyApp` Directory Exists
        run: |
          if [ ! -d "MyApp" ]; then
            echo "Creating Cordova Project..."
            cordova create MyApp com.example.myapp MyApp
          fi

      - name: Navigate to `MyApp` and Add Android Platform
        run: |
          if [ -d "MyApp" ]; then
            cd MyApp
            cordova platform add android || true
          else
            echo "Error: MyApp directory does not exist!"
            exit 1
          fi

      - name: Copy Updated Files to Cordova `www/`
        run: |
          rm -rf MyApp/www/*
          cp -r index.html MyApp/www/
          cp -r assets MyApp/www/ || true
          cp -r js MyApp/www/ || true
          cp -r css MyApp/www/ || true

      - name: Generate Keystore for Signing (if not exists)
        run: |
          if [ ! -f my-release-key.jks ]; then
            keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-key-alias -storepass mypassword -keypass mypassword -dname "CN=MyApp, OU=MyOrg, O=MyCompany, L=City, S=State, C=US"
          fi

      - name: Build APK and AAB
        run: |
          cd MyApp
          cordova build android --release -- --packageType=apk
          cordova build android --release -- --packageType=bundle

      - name: Sign APK File
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore my-release-key.jks -storepass mypassword -keypass mypassword \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk my-key-alias

      - name: Align APK for Installation
        run: |
          zipalign -v 4 \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release.apk

      - name: Download BundleTool and Convert AAB to APK
        run: |
          wget -q -O bundletool.jar https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar
          mv bundletool.jar MyApp/
          cd MyApp
          java -jar bundletool.jar build-apks --bundle=platforms/android/app/build/outputs/bundle/release/app-release.aab --output=app-release.apks --mode=universal
          unzip app-release.apks -d app-release

      - name: Upload APK and AAB Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            MyApp/platforms/android/app/build/outputs/apk/release/app-release.apk
            MyApp/platforms/android/app/build/outputs/bundle/release/app-release.aab
