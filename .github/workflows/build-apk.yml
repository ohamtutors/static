name: Build and Sign Android APK

on:
  push:
    branches:
      - main
    paths:
      - "index.html"
      - "assets/**"
      - "css/**"
      - "js/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker to Build with Android SDK
        uses: addnab/docker-run-action@v3
        with:
          image: codemagic/android:latest  # Use a pre-configured Docker image with Android SDK
          options: --entrypoint ""  # Set a custom entrypoint if needed
          run: |
            # Start Docker container and setup build environment inside it
            cd /workspace

            # Install necessary dependencies
            apt-get update && apt-get install -y wget curl git

            # Install cordova
            npm install -g cordova

            # Create the cordova project
            if [ ! -d "MentorNook" ]; then
              cordova create MentorNook com.example.MentorNook MentorNook
            fi

            # Add Android platform
            cd MentorNook
            cordova platform add android || true

            # Install Cordova plugins
            cordova plugin add cordova-plugin-file
            cordova plugin add cordova-plugin-file-transfer
            cordova plugin add cordova-plugin-android-permissions
            cordova plugin add cordova-plugin-inappbrowser
            cordova plugin add cordova-plugin-dialogs

            # Modify config.xml for WebView file access
            if ! grep -q "AndroidPersistentFileLocation" config.xml; then
              sed -i '/<platform name="android">/a \
              <preference name="AndroidPersistentFileLocation" value="Internal"/> \
              <preference name="AllowInlineMediaPlayback" value="true"/> \
              <preference name="AndroidInsecureFileModeEnabled" value="true"/> \
              <plugin name="cordova-plugin-dialogs" source="npm" /> \
              <allow-navigation href="*" />' config.xml
            fi

            # Copy updated files to Cordova's www/ directory
            rm -rf www/*
            cp -r ../index.html www/
            cp -r ../assets www/
            cp -r ../js www/
            cp -r ../css www/

            # Build the APK and AAB
            cordova build android --release -- --packageType=apk --verbose
            cordova build android --release -- --packageType=bundle --verbose

            # Sign the APK
            jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore my-release-key.jks -storepass mypassword -keypass mypassword \
            platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk my-key-alias

            # Align the APK for installation
            zipalign -v 4 \
            platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
            platforms/android/app/build/outputs/apk/release/app-release.apk

            # Upload APK and AAB Artifacts
            mkdir -p /workspace/artifacts
            cp platforms/android/app/build/outputs/apk/release/app-release.apk /workspace/artifacts/
            cp platforms/android/app/build/outputs/bundle/release/app-release.aab /workspace/artifacts/

      - name: Upload APK and AAB Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: /workspace/artifacts/*
