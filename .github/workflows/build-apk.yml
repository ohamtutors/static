name: Build APK and AAB for WebView

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Cordova
        run: npm install -g cordova

      - name: Create Cordova Project
        run: |
          cordova create MyApp com.example.myapp MyApp
          cd MyApp
          cordova platform add android

      - name: Remove existing files from www
        run: rm -rf www/*

      - name: Copy project files (excluding www)
        run: rsync -av --exclude=www ../ www/

      - name: Generate Keystore for Signing
        run: |
          keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-key-alias -storepass mypassword -keypass mypassword -dname "CN=MyApp, OU=MyOrg, O=MyCompany, L=City, S=State, C=US"

      - name: Build AAB and Unsigned APK
        run: |
          cd MyApp
          cordova build android --release
          ls -al platforms/android/app/build/outputs/bundle/release/
          ls -al platforms/android/app/build/outputs/apk/release/

      - name: Sign AAB File
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore my-release-key.jks -storepass mypassword -keypass mypassword \
          MyApp/platforms/android/app/build/outputs/bundle/release/app-release.aab my-key-alias

      - name: Sign APK File
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore my-release-key.jks -storepass mypassword -keypass mypassword \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk my-key-alias

      - name: Align APK for Installation
        run: |
          zipalign -v 4 \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
          MyApp/platforms/android/app/build/outputs/apk/release/app-release.apk

      - name: Install BundleTool
        run: |
          wget -q -O bundletool.jar https://github.com/google/bundletool/releases/download/1.9.0/bundletool-all-1.9.0.jar
          mv bundletool.jar MyApp/

      - name: Generate APK from AAB
        run: |
          cd MyApp
          java -jar bundletool.jar build-apks --bundle=platforms/android/app/build/outputs/bundle/release/app-release.aab --output=app-release.apks --mode=universal
          unzip app-release.apks -d app-release
          ls -al app-release/universal.apk

      - name: Upload APK and AAB Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            MyApp/platforms/android/app/build/outputs/bundle/release/app-release.aab
            MyApp/platforms/android/app/build/outputs/apk/release/app-release.apk
            MyApp/app-release/universal.apk
